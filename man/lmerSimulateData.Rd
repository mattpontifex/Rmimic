% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lmerSimulateData.R
\name{lmerSimulateData}
\alias{lmerSimulateData}
\title{lmerSimulateData}
\usage{
lmerSimulateData(
  fit,
  between = NULL,
  within = NULL,
  dependentvariable = NULL,
  subjectid = NULL,
  subsample = NULL,
  inflation = NULL,
  parametric = TRUE,
  method = NULL
)
}
\arguments{
\item{fit}{modelfit from the lmer function}

\item{between}{text list specifying the between subjects variables}

\item{within}{text list specifying any variables that should be considered as within subjects. If null assumes all factors are between subjects.}

\item{dependentvariable}{text specifying the dependent variable label}

\item{subjectid}{text specifying the subject id label. If left NULL assumes all factors are between subjects}

\item{subsample}{decimal parameter 0 to 1 indicating the percent of the sample to use. default is the full sample. Ignored when method is conditionaldistribution}

\item{inflation}{decimal parameter indicating the group level multiplier for the final sample. default is no inflation}

\item{parametric}{boolean parameter indicating if the simulation should create a parametrically simulated dataset using the MASS::mvrnorm function (true) or a nonnormal simulated dataset using the mnonr::unonr function (false). Ignored when method is conditionaldistribution}

\item{method}{text specifying either conditionaldistribution (default) to use the simulate function or covariance to use the MASS::mvrnorm function or mnonr::unonr functions.}
}
\value{
results list output from the lmerEffects function
}
\description{
Function to create a simulated dataset from an lmer model. When method is conditionaldistribution, the function simulates data by drawing random samples from the conditional distribution of the outcome variable given the estimated model parameters using the simulate function. The data is simulated multiple times and then subjects are removed until the desired sample sizes for each between subjects variable is obtained. When method is covariance, the function simulates data from a multivariate distribution using the covariance matrix using the MASS::mvrnorm function (when parametric is true) or using the mnonr::unonr function (when parametric is false).
}
\examples{

    fit <- lmerTest::lmer(Alertness ~ Group*Time + (1 | PartID), data = Rmimic::alertness)
    newdata <- Rmimic::lmerSimulateData(fit, between=c('Group'), within=c('Time'), dependentvariable = 'Alertness', subjectid = 'PartID', inflation=1.0, method='conditionaldistribution')
    newdata2 <- Rmimic::lmerSimulateData(fit, between=c('Group'), within=c('Time'), dependentvariable = 'Alertness', subjectid = 'PartID', inflation=1.0, method='covariance', subsample=0.8)                
               
}
\author{
Matthew B. Pontifex, \email{pontifex@msu.edu}, May 10, 2025
}
