tryCatch(library(ez), error=function(e){install.packages("ez"); library(ez)})
tryCatch(library(psychometric), error=function(e){install.packages("psychometric"); library(psychometric)})

# Setup exemplar data
# Between Subjects Variable - Group
# Within Subjects Variables - Condition and Time
mockdatabase <- data.frame("PartID" = rep_len(1:60,360), 
                           "Group" = rep_len(c(rep_len("GroupA",30),rep_len("GroupB",30)),360),
                           "Condition" = c(rep_len("ConditionX",180),rep_len("ConditionY",180)),
                           "Time" = rep_len(c(rep_len("Time1",60),rep_len("Time2",60),rep_len("Time3",60)),360),
                           "Alertness" = round(stats::runif(360, 20, 30), digits = 2))

# Force some effects
#mockdatabase$Alertness[which(mockdatabase$Group == "GroupA")] <- mockdatabase$Alertness[which(mockdatabase$Group == "GroupA")] * 1.5
mockdatabase$Alertness[which(mockdatabase$Condition == "ConditionX" & mockdatabase$Time == "Time3")] <- mockdatabase$Alertness[which(mockdatabase$Condition == "ConditionX" & mockdatabase$Time == "Time3")] * 1.5

result <- ez::ezANOVA(data=mockdatabase,
                      dv=Alertness,wid=PartID,
                      between=Group,within=.(Condition, Time),
                      type=3,detailed=TRUE,return_aov=TRUE)

# Compute partial eta squared
result$ANOVA$partialetasquared <- result$ANOVA$SSn/(result$ANOVA$SSn+result$ANOVA$SSd)

# Calculate f^2 = partialeta^2 / ( 1 - partialeta^2 )
result$ANOVA$pesfsquared <- result$ANOVA$partialetasquared/(1-result$ANOVA$partialetasquared)
result$ANOVA$gesfsquared <- result$ANOVA$ges/(1-result$ANOVA$ges)

# Compute effect size confidence intervals
result$ANOVA$fsquared.ci.lower <- NA
result$ANOVA$fsquared.ci.upper <- NA

# Compute effect size confidence intervals
result$ANOVA$fsquared.ci.lower <- NA
result$ANOVA$fsquared.ci.upper <- NA
for (cT in 1:nrow(result$ANOVA)) {
  tempR2 <- result$ANOVA$ges[cT]
  if (!is.na(tempR2)) {
    temp <- psychometric::CI.Rsq(tempR2, length(unique(unlist(as.character(mockdatabase$PartID)))), length(unlist(strsplit(as.character(result$ANOVA$Effect[cT]),"[:]"))), level = 0.95)
    if (temp$LCL[1]<0) {
      result$ANOVA$fsquared.ci.lower[cT] <- 0
    } else {
      result$ANOVA$fsquared.ci.lower[cT] <- (temp$LCL[1]/(1-temp$LCL[1]))
    }
    if (temp$UCL[1] > 1) {
      result$ANOVA$fsquared.ci.upper[cT] <- Inf
    } else {
      result$ANOVA$fsquared.ci.upper[cT] <- (temp$UCL[1]/(1-temp$UCL[1]))
    }
    rm(temp)
  }
  rm(tempR2)
}
rm(cT)

result


